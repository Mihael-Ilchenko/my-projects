/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst intialData = {\n    wallet: 1000000,\n    bet: 50000,\n    starTotalTo: 9000,\n    starTotalFrom: 0\n}\nconst { spinBtn, slotsLists, bet, walletTotal, stars, winTotal, autoBtn, slotsItems } = getAllElements();\nconst stepStars = 100;\n\nlet start;\nconst timeAnim = 1000;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    initialGame();\n    game();\n});\n\nfunction game() {\n\n    changeBet();\n\n    walletTotal.textContent = getItemLocStor('wallet') || getItemLocStor('wallet') === 0 ? getItemLocStor('wallet') : intialData.wallet;\n    stars.to.textContent = intialData.starTotalTo;\n    stars.from.textContent = getItemLocStor('stars') ? getItemLocStor('stars') : intialData.starTotalFrom;\n\n    spinBtn.addEventListener('click', play);\n    autoBtn.addEventListener('click', (e) => { autoPlay(e.target) });\n    getItemLocStor('autoPlay') && autoPlay(autoBtn);\n\n}\n\nfunction win() {\n    setTimeout(() => {\n        const centralSlots = document.querySelectorAll('.slots__list li:nth-child(2n)');\n        const targetBet = Number(bet.betTotal.textContent);\n        const targetWallet = Number(walletTotal.textContent);\n        const targetWin = targetBet * 5;\n\n        if (centralSlots[0].dataset.value === centralSlots[1].dataset.value && centralSlots[0].dataset.value === centralSlots[2].dataset.value) {\n            winTotal.textContent = targetWin\n            setItemLocStor('win', targetWin)\n            setItemLocStor('wallet', targetWallet + targetWin);\n            walletTotal.textContent = targetWallet + targetWin;\n        }\n\n    }, timeAnim)\n\n\n}\n\nfunction changeStars(star) {\n\n    if (star <= intialData.starTotalTo) {\n        setItemLocStor('stars', star);\n        stars.from.textContent = getItemLocStor('stars');\n    }\n\n}\n\nfunction autoPlay(btn) {\n    const classActive = 'auto_active';\n    btn.classList.toggle(classActive);\n    setItemLocStor('autoPlay', true);\n\n\n    if (btn.classList.contains(classActive)) {\n        play();\n        start = setInterval(play, 2000)\n    } else {\n        setItemLocStor('autoPlay', false)\n        clearInterval(start)\n    }\n}\n\nfunction play() {\n    const targetBet = Number(bet.betTotal.textContent);\n    const targetWallet = Number(walletTotal.textContent);\n    setItemLocStor('win', '');\n    winTotal.textContent = '';\n\n    const resultWallet = targetWallet - targetBet;\n    const resultStars = Number(stars.from.textContent) + stepStars;\n    if (targetWallet > 0 && resultWallet >= 0 && resultStars) {\n        rotateSlots(resultWallet, resultStars);\n        win()\n    }\n}\n\nfunction rotateSlots(resultWallet, resultStars) {\n    const activeListClass = 'slots__list_active';\n    const slotsItems = document.querySelectorAll('.slots__item');\n    wallet(resultWallet);\n    changeStars(resultStars);\n    disabledAddRemoveElements(true);\n\n    slotsLists[0].classList.add(activeListClass);\n    setTimeout(() => { slotsLists[1].classList.add(activeListClass); }, 200);\n    setTimeout(() => { slotsLists[2].classList.add(activeListClass); }, 400)\n\n    setTimeout(() => {\n        slotsLists.forEach(list => list.classList.remove(activeListClass));\n        slotsLists.forEach(list => {\n            list.innerHTML = '';\n            for (let i = 0; i < 3; i++) {\n                list.append(generateRandomItem('slots__item'));\n            }\n        });\n        disabledAddRemoveElements(false);\n    }, timeAnim)\n\n}\n\nfunction disabledAddRemoveElements(bool) {\n    [bet.betBtnDecrement, bet.betBtnIncrement, spinBtn].forEach(elem => {\n        elem.disabled = bool;\n    })\n}\n\nfunction wallet(sum) {\n    setItemLocStor('wallet', sum)\n    walletTotal.textContent = getItemLocStor('wallet');\n\n}\n\nfunction changeBet() {\n\n    const { betBtnDecrement, betBtnIncrement, betTotal } = bet;\n    betTotal.textContent = getItemLocStor('bet') ? getItemLocStor('bet') : intialData.bet;\n    const step = 1000;\n    betBtnIncrement.addEventListener('click', betIncrement);\n    betBtnDecrement.addEventListener('click', betDecrement);\n\n\n\n    function betIncrement() {\n        if (betTotal.textContent >= step * 2) {\n            const result = Number(betTotal.textContent) - step\n            betTotal.textContent = result;\n            setItemLocStor('bet', result);\n\n        }\n    }\n\n    function betDecrement() {\n        if (betTotal.textContent < step * 50) {\n            const result = Number(betTotal.textContent) + step;\n            betTotal.textContent = result\n            setItemLocStor('bet', result)\n        }\n\n    }\n}\n\nfunction initialGame() {\n    slotsLists.forEach(list => {\n        for (let i = 0; i < 3; i++) {\n            list.append(generateRandomItem())\n        }\n\n    })\n}\n\nfunction getAllElements() {\n    const backBtn = document.getElementById('back');\n    const starsTotalFrom = document.getElementById('stars-total-from');\n    const starsTotalTo = document.getElementById('star-total-to');\n    const walletTotal = document.getElementById('wallet-total');\n    const betBtnIncrement = document.getElementById('bet-increment');\n    const betBtnDecrement = document.getElementById('bet-decrement');\n    const betTotal = document.getElementById('bet-total');\n    const winTotal = document.getElementById('winning-total');\n    const autoBtn = document.getElementById('auto-btn');\n    const spinBtn = document.getElementById('spin-btn');\n    const slotsLists = document.querySelectorAll('.slots__list');\n    const slotsItems = document.querySelectorAll('.slots__item');\n\n    return {\n        backBtn,\n        stars: {\n            to: starsTotalTo,\n            from: starsTotalFrom\n        },\n        bet: {\n            betBtnIncrement,\n            betBtnDecrement,\n            betTotal\n        },\n        slotsLists,\n        slotsItems,\n        spinBtn,\n        autoBtn,\n        winTotal,\n        walletTotal,\n    }\n}\n\nfunction generateRandomItem(itemClass = 'slots__item') {\n    const dataImg = [{\n        src: './img/slots/777.svg',\n        value: 'Семерки'\n    }, {\n        src: './img/slots/bell.svg',\n        value: 'Колокольчик'\n    }, {\n        src: './img/slots/cherry.svg',\n        value: 'Вишня'\n    }, {\n        src: './img/slots/grape.svg',\n        value: 'Виноград'\n    }, {\n        src: './img/slots/lemon.svg',\n        value: 'Лимон'\n    }, {\n        src: './img/slots/orange.svg',\n        value: 'Апельсин'\n    }, {\n        src: './img/slots/plum.svg',\n        value: 'Слива'\n    }, {\n        src: './img/slots/watermelon.svg',\n        value: 'Арбуз'\n    }];\n    const randomNumber = getRandomNumber(0, dataImg.length);\n    const item = document.createElement('li');\n    item.classList.add(itemClass);\n    item.id = generateRandomString();\n    item.setAttribute('data-value', dataImg[randomNumber].value)\n    const img = document.createElement('img');\n    img.classList.add('slots__img');\n\n    img.src = dataImg[randomNumber].src;\n    img.alt = dataImg[randomNumber].value\n    item.append(img);\n\n    return item\n}\n\nfunction getRandomNumber(min, max) {\n    return Math.trunc(Math.random() * (max - min) + min)\n}\n\nfunction setItemLocStor(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction getItemLocStor(key) {\n    return JSON.parse(localStorage.getItem(key))\n}\n\nfunction generateRandomString() {\n    return Math.random().toString(36).substring(2, 15)\n}\n\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;